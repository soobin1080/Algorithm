import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class bj_2667 {
	static int map[][];
	static boolean visited[][];

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(br.readLine());

		map = new int[n][n];
		visited = new boolean[n][n];
		for (int i = 0; i < n; i++) {
			String st = br.readLine();
			for (int j = 0; j < n; j++) {
				map[i][j] = st.charAt(j) - '0';
			}
		}

		int danji = 0;
		ArrayList<Integer> houses = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (map[i][j] == 1) {
					int house = bfs(i, j, danji);
					houses.add(house);
				}
			}
		}

	}

	private static int bfs(int y, int x, int danji) {
		// TODO Auto-generated method stub
		Queue<Node> qu=new LinkedList<Node>();
		if() {
			
		}
		return 0;
	}

	static class Node {
		int y;
		int x;

		Node(int y, int x) {
			this.y = y;
			this.x = x;
		}
	}

}
